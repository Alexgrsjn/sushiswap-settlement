{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "OrderCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "page",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "allHashes",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "cancelOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "cancelOrderCallHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "fromToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "toToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "createOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "fromToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "toToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "createOrderCallHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fromToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "page",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "hashesOfFromToken",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "page",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "hashesOfMaker",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "toToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "page",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "hashesOfToToken",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfAllHashes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fromToken",
          "type": "address"
        }
      ],
      "name": "numberOfHashesOfFromToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "numberOfHashesOfMaker",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "toToken",
          "type": "address"
        }
      ],
      "name": "numberOfHashesOfToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "orderOfHash",
      "outputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "fromToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "toToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x5b8C253517b6Bd003369173109693B01cb6841B5",
    "contractAddress": null,
    "transactionIndex": 0,
    "gasUsed": "961460",
    "logsBloom": "0x
    "blockHash": "0xe611f570544a34ebcf866c407fd3a81f74de95d12df3cf2f26f697f6ee19bff0",
    "transactionHash": "0xac55de978bd2bbcd2390afd2c1f748cea2bc11862c74035515326bdb417f3ce6",
    "logs": [],
    "blockNumber": 21474275,
    "cumulativeGasUsed": "961460",
    "status": 1,
    "byzantium": true
  },
  "address": "0x363a4d1500f15c0212995ecbd968291eded342ff",
  "args": [],
  "solcInputHash": "0xec82edc0c72e62a2369af23f6806e5d29051a3769612bc36e3e2198781a2a38b",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"OrderCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"page\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"allHashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"cancelOrderCallHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"createOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"createOrderCallHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"page\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"hashesOfFromToken\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"page\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"hashesOfMaker\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"page\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"hashesOfToToken\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfAllHashes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"}],\"name\":\"numberOfHashesOfFromToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"numberOfHashesOfMaker\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"}],\"name\":\"numberOfHashesOfToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderOfHash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OrderBook.sol\":\"OrderBook\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IERC20.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IERC20Uniswap {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe9d81973e1bdb14802875faed4ae169e9fb7816986436c43aa2dd9bfdc809698\"},\"contracts/OrderBook.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.6.12;\\n\\nimport \\\"@sushiswap/core/contracts/uniswapv2/interfaces/IERC20.sol\\\";\\nimport \\\"./libraries/Orders.sol\\\";\\nimport \\\"./libraries/Verifier.sol\\\";\\n\\ncontract OrderBook {\\n    using Orders for Orders.Order;\\n\\n    event OrderCreated(bytes32 indexed hash);\\n    event OrderCancelled(bytes32 indexed hash);\\n\\n    bytes32[] internal _allHashes;\\n    mapping(address => bytes32[]) internal _hashesOfMaker;\\n    mapping(address => bytes32[]) internal _hashesOfFromToken;\\n    mapping(address => bytes32[]) internal _hashesOfToToken;\\n    mapping(bytes32 => Orders.Order) public orderOfHash;\\n\\n    function numberOfHashesOfMaker(address maker) external view returns (uint256) {\\n        return _hashesOfMaker[maker].length;\\n    }\\n\\n    function numberOfHashesOfFromToken(address fromToken) external view returns (uint256) {\\n        return _hashesOfFromToken[fromToken].length;\\n    }\\n\\n    function numberOfHashesOfToToken(address toToken) external view returns (uint256) {\\n        return _hashesOfToToken[toToken].length;\\n    }\\n\\n    function numberOfAllHashes() external view returns (uint256) {\\n        return _allHashes.length;\\n    }\\n\\n    function hashesOfMaker(\\n        address maker,\\n        uint256 page,\\n        uint256 limit\\n    ) external view returns (bytes32[] memory) {\\n        return _hashes(_hashesOfMaker[maker], page, limit);\\n    }\\n\\n    function hashesOfFromToken(\\n        address fromToken,\\n        uint256 page,\\n        uint256 limit\\n    ) external view returns (bytes32[] memory) {\\n        return _hashes(_hashesOfFromToken[fromToken], page, limit);\\n    }\\n\\n    function hashesOfToToken(\\n        address toToken,\\n        uint256 page,\\n        uint256 limit\\n    ) external view returns (bytes32[] memory) {\\n        return _hashes(_hashesOfToToken[toToken], page, limit);\\n    }\\n\\n    function allHashes(uint256 page, uint256 limit) external view returns (bytes32[] memory) {\\n        return _hashes(_allHashes, page, limit);\\n    }\\n\\n    function _hashes(\\n        bytes32[] storage hashes,\\n        uint256 page,\\n        uint256 limit\\n    ) private view returns (bytes32[] memory result) {\\n        result = new bytes32[](limit);\\n        for (uint256 i = 0; i < limit; i++) {\\n            if (page * limit + i >= hashes.length) {\\n                result[i] = bytes32(0);\\n            } else {\\n                result[i] = hashes[page * limit + i];\\n            }\\n        }\\n        return result;\\n    }\\n\\n    function createOrder(\\n        address maker,\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address recipient,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        require(maker != address(0), \\\"invalid-maker-address\\\");\\n        require(fromToken != address(0), \\\"invalid-from-token-address\\\");\\n        require(toToken != address(0), \\\"invalid-to-token-address\\\");\\n        require(fromToken != toToken, \\\"duplicate-token-addresses\\\");\\n        require(amountIn > 0, \\\"invalid-amount-in\\\");\\n        require(amountOutMin > 0, \\\"invalid-amount-out-min\\\");\\n        require(recipient != address(0), \\\"invalid-recipient\\\");\\n        require(deadline > block.timestamp, \\\"invalid-deadline\\\");\\n\\n        bytes32 hash = createOrderCallHash(\\n            maker,\\n            fromToken,\\n            toToken,\\n            amountIn,\\n            amountOutMin,\\n            recipient,\\n            deadline\\n        );\\n        require(Verifier.verify(maker, hash, v, r, s), \\\"not-signed-by-maker\\\");\\n\\n        Orders.Order storage order = orderOfHash[hash];\\n        require(order.maker == address(0), \\\"order-exists\\\");\\n        order.maker = maker;\\n        order.fromToken = fromToken;\\n        order.toToken = toToken;\\n        order.amountIn = amountIn;\\n        order.amountOutMin = amountOutMin;\\n        order.recipient = recipient;\\n        order.deadline = deadline;\\n        order.v = v;\\n        order.r = r;\\n        order.s = s;\\n\\n        _addHash(_allHashes, hash, deadline);\\n        _addHash(_hashesOfMaker[maker], hash, deadline);\\n        _addHash(_hashesOfFromToken[fromToken], hash, deadline);\\n        _addHash(_hashesOfToToken[toToken], hash, deadline);\\n\\n        emit OrderCreated(hash);\\n    }\\n\\n    function _addHash(\\n        bytes32[] storage hashes,\\n        bytes32 hash,\\n        uint256 deadline\\n    ) internal {\\n        // hashes are ordered by deadline increasingly\\n        if (hashes.length == 0) {\\n            hashes.push(hash);\\n            return;\\n        }\\n        uint256 index = uint256(-1);\\n        for (uint256 i = 0; i < hashes.length; i++) {\\n            if (orderOfHash[hashes[i]].deadline > deadline) {\\n                index = i;\\n                break;\\n            }\\n        }\\n        if (index == uint256(-1)) {\\n            hashes.push(hash);\\n            return;\\n        }\\n        hashes.push();\\n        for (uint256 i = hashes.length - 1; i > index; i--) {\\n            hashes[i] = hashes[i - 1];\\n        }\\n        hashes[index] = hash;\\n    }\\n\\n    function createOrderCallHash(\\n        address maker,\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address recipient,\\n        uint256 deadline\\n    ) public view returns (bytes32) {\\n        return Orders.hash(maker, fromToken, toToken, amountIn, amountOutMin, recipient, deadline);\\n    }\\n\\n    function cancelOrder(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        Orders.Order storage order = orderOfHash[hash];\\n        require(order.maker != address(0), \\\"no-order-exists\\\");\\n\\n        bytes32 callHash = cancelOrderCallHash(hash);\\n        require(Verifier.verify(order.maker, callHash, v, r, s), \\\"not-signed-by-maker\\\");\\n\\n        _removeHash(_allHashes, hash);\\n        _removeHash(_hashesOfMaker[order.maker], hash);\\n        _removeHash(_hashesOfFromToken[order.fromToken], hash);\\n        _removeHash(_hashesOfToToken[order.toToken], hash);\\n\\n        emit OrderCancelled(hash);\\n    }\\n\\n    function _removeHash(bytes32[] storage hashes, bytes32 hash) internal {\\n        // hashes are ordered by deadline increasingly\\n        uint256 index = hashes.length - 1;\\n        for (uint256 i = 0; i < hashes.length; i++) {\\n            if (hashes[i] == hash) {\\n                index = i;\\n            }\\n        }\\n        for (uint256 i = index; i < hashes.length - 1; i++) {\\n            hashes[i] = hashes[i + 1];\\n        }\\n        hashes.pop();\\n    }\\n\\n    function cancelOrderCallHash(bytes32 hash) public view returns (bytes32) {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        return keccak256(abi.encodePacked(chainId, address(this), this.cancelOrder.selector, hash));\\n    }\\n}\\n\",\"keccak256\":\"0xe7464f609d6fd27cf18b24c50bcd564b1c99407c8c3dd67a6d37d51f3f6db7ca\",\"license\":\"MIT\"},\"contracts/libraries/Orders.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.6.12;\\n\\nlibrary Orders {\\n    enum Status {Invalid, Fillable, Expired, Filled}\\n\\n    bytes32 internal constant ORDER_TYPEHASH = keccak256(\\n        // solhint-disable-next-line\\n        \\\"Order(address maker,address fromToken,address toToken,address amountIn,address amountOutMin,address recipient,address deadline)\\\"\\n    );\\n\\n    struct Order {\\n        address maker;\\n        address fromToken;\\n        address toToken;\\n        uint256 amountIn;\\n        uint256 amountOutMin;\\n        address recipient;\\n        uint256 deadline;\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n    }\\n\\n    struct OrderInfo {\\n        Status status;\\n        uint256 filledAmountIn;\\n    }\\n\\n    function hash(Order memory order) internal view returns (bytes32) {\\n        return\\n            hash(\\n                order.maker,\\n                order.fromToken,\\n                order.toToken,\\n                order.amountIn,\\n                order.amountOutMin,\\n                order.recipient,\\n                order.deadline\\n            );\\n    }\\n\\n    function hash(\\n        address maker,\\n        address fromToken,\\n        address toToken,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address recipient,\\n        uint256 deadline\\n    ) internal view returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encodePacked(\\n                    ORDER_TYPEHASH,\\n                    maker,\\n                    fromToken,\\n                    toToken,\\n                    amountIn,\\n                    amountOutMin,\\n                    recipient,\\n                    deadline\\n                )\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0x756f5caebd6259577bdaa848cb4cf0f73654560ec4530dc1450f41e6d55b6dac\",\"license\":\"MIT\"},\"contracts/libraries/Verifier.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.6.12;\\n\\nlibrary Verifier {\\n    function verify(\\n        address signer,\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (bool) {\\n        bool verified = signer == ecrecover(hash, v, r, s);\\n        if (verified) {\\n            return true;\\n        } else {\\n            // Consider it signed by web3.eth_sign\\n            hash = keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n            return signer == ecrecover(hash, v, r, s);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa02cdd2a2f8279c1cd83fb6729e83055fd0d7fc274c190ca274ed5b43d18d16e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611066806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806365f7a5511161008c578063ac3204aa11610066578063ac3204aa146102b5578063bceb45db146102e9578063df4c1b4114610382578063ed421aa6146103a5576100cf565b806365f7a5511461025e57806375af1c361461029057806389da5e6914610298576100cf565b806303e0992f146100d45780630777aa321461010c57806314eaa86814610132578063257ce891146101b45780633d91efcf146102065780635fd45d241461022c575b600080fd5b6100fa600480360360208110156100ea57600080fd5b50356001600160a01b031661040f565b60408051918252519081900360200190f35b6100fa6004803603602081101561012257600080fd5b50356001600160a01b031661042a565b6101646004803603606081101561014857600080fd5b506001600160a01b038135169060208101359060400135610445565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101a0578181015183820152602001610188565b505050509050019250505060405180910390f35b6100fa600480360360e08110156101ca57600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359160808201359160a08101359091169060c00135610473565b6100fa6004803603602081101561021c57600080fd5b50356001600160a01b0316610490565b6101646004803603606081101561024257600080fd5b506001600160a01b0381351690602081013590604001356104ab565b6101646004803603606081101561027457600080fd5b506001600160a01b0381351690602081013590604001356104d1565b6100fa6104f7565b6100fa600480360360208110156102ae57600080fd5b50356104fd565b6102e7600480360360808110156102cb57600080fd5b5080359060ff6020820135169060408101359060600135610543565b005b610306600480360360208110156102ff57600080fd5b50356106b9565b604051808b6001600160a01b031681526020018a6001600160a01b03168152602001896001600160a01b03168152602001888152602001878152602001866001600160a01b031681526020018581526020018460ff1681526020018381526020018281526020019a505050505050505050505060405180910390f35b6101646004803603604081101561039857600080fd5b508035906020013561071f565b6102e760048036036101408110156103bc57600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359160808201359160a08101359091169060c08101359060ff60e08201351690610100810135906101200135610734565b6001600160a01b031660009081526002602052604090205490565b6001600160a01b031660009081526001602052604090205490565b6001600160a01b038316600090815260026020526040902060609061046b908484610bbe565b949350505050565b600061048488888888888888610c80565b98975050505050505050565b6001600160a01b031660009081526003602052604090205490565b6001600160a01b038316600090815260016020526040902060609061046b908484610bbe565b6001600160a01b038316600090815260036020526040902060609061046b908484610bbe565b60005490565b60408051466020808301919091523060601b82840152635619025560e11b6054830152605880830194909452825180830390940184526078909101909152815191012090565b600084815260046020526040902080546001600160a01b031661059f576040805162461bcd60e51b815260206004820152600f60248201526e6e6f2d6f726465722d65786973747360881b604482015290519081900360640190fd5b60006105aa866104fd565b82549091506105c5906001600160a01b031682878787610d16565b61060c576040805162461bcd60e51b81526020600482015260136024820152723737ba16b9b4b3b732b216b13c96b6b0b5b2b960691b604482015290519081900360640190fd5b610617600087610e79565b81546001600160a01b0316600090815260016020526040902061063a9087610e79565b60018201546001600160a01b031660009081526002602052604090206106609087610e79565b60028201546001600160a01b031660009081526003602052604090206106869087610e79565b60405186907f5152abf959f6564662358c2e52b702259b78bac5ee7842a0f01937e670efcc7d90600090a2505050505050565b600460208190526000918252604090912080546001820154600283015460038401549484015460058501546006860154600787015460088801546009909801546001600160a01b0397881699968816989588169794959390941693919260ff909116918a565b606061072d60008484610bbe565b9392505050565b6001600160a01b038a16610787576040805162461bcd60e51b8152602060048201526015602482015274696e76616c69642d6d616b65722d6164647265737360581b604482015290519081900360640190fd5b6001600160a01b0389166107e2576040805162461bcd60e51b815260206004820152601a60248201527f696e76616c69642d66726f6d2d746f6b656e2d61646472657373000000000000604482015290519081900360640190fd5b6001600160a01b03881661083d576040805162461bcd60e51b815260206004820152601860248201527f696e76616c69642d746f2d746f6b656e2d616464726573730000000000000000604482015290519081900360640190fd5b876001600160a01b0316896001600160a01b031614156108a4576040805162461bcd60e51b815260206004820152601960248201527f6475706c69636174652d746f6b656e2d61646472657373657300000000000000604482015290519081900360640190fd5b600087116108ed576040805162461bcd60e51b815260206004820152601160248201527034b73b30b634b216b0b6b7bab73a16b4b760791b604482015290519081900360640190fd5b6000861161093b576040805162461bcd60e51b815260206004820152601660248201527534b73b30b634b216b0b6b7bab73a16b7baba16b6b4b760511b604482015290519081900360640190fd5b6001600160a01b03851661098a576040805162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a590b5c9958da5c1a595b9d607a1b604482015290519081900360640190fd5b4284116109d1576040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642d646561646c696e6560801b604482015290519081900360640190fd5b60006109e28b8b8b8b8b8b8b610473565b90506109f18b82868686610d16565b610a38576040805162461bcd60e51b81526020600482015260136024820152723737ba16b9b4b3b732b216b13c96b6b0b5b2b960691b604482015290519081900360640190fd5b600081815260046020526040902080546001600160a01b031615610a92576040805162461bcd60e51b815260206004820152600c60248201526b6f726465722d65786973747360a01b604482015290519081900360640190fd5b80546001600160a01b03199081166001600160a01b038e811691909117835560018301805483168e831617905560028301805483168d8316179055600383018b9055600483018a90556005830180549092169089161790556006810186905560078101805460ff191660ff87161790556008810184905560098101839055610b1c60008388610f25565b6001600160a01b038c166000908152600160205260409020610b3f908388610f25565b6001600160a01b038b166000908152600260205260409020610b62908388610f25565b6001600160a01b038a166000908152600360205260409020610b85908388610f25565b60405182907f918554b6bd6e2895ce6553de5de0e1a69db5289aa0e4fe193a0dcd1f1434747790600090a2505050505050505050505050565b60608167ffffffffffffffff81118015610bd757600080fd5b50604051908082528060200260200182016040528015610c01578160200160208202803683370190505b50905060005b82811015610c78578454848402820110610c3c576000801b828281518110610c2b57fe5b602002602001018181525050610c70565b84818486020181548110610c4c57fe5b9060005260206000200154828281518110610c6357fe5b6020026020010181815250505b600101610c07565b509392505050565b604080517f02f6dc7ce3eb5b1bd3bb37a6ff443d8c9922f817e83adacce3f8c7cdda6fa1e46020808301919091526bffffffffffffffffffffffff1960609a8b1b811683850152988a1b8916605483015296891b88166068820152607c810195909552609c850193909352951b90931660bc82015260d0808201949094528251808203909401845260f001909152815191012090565b60008060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610d73573d6000803e3d6000fd5b505050602060405103516001600160a01b0316876001600160a01b03161490508015610da3576001915050610e70565b8560405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c0182815260200191505060405160208183030381529060405280519060200120955060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610e4e573d6000803e3d6000fd5b505050602060405103516001600160a01b0316876001600160a01b0316149150505b95945050505050565b81546000190160005b8354811015610eb55782848281548110610e9857fe5b90600052602060002001541415610ead578091505b600101610e82565b50805b835460001901811015610eff57838160010181548110610ed457fe5b9060005260206000200154848281548110610eeb57fe5b600091825260209091200155600101610eb8565b5082805480610f0a57fe5b60019003818190600052602060002001600090559055505050565b8254610f455782546001810184556000848152602090200182905561102b565b60001960005b8454811015610f98578260046000878481548110610f6557fe5b90600052602060002001548152602001908152602001600020600601541115610f9057809150610f98565b600101610f4b565b50600019811415610fbe575082546001810184556000848152602090200182905561102b565b835460018101855560008590525b8181111561100f57846001820381548110610fe357fe5b9060005260206000200154858281548110610ffa57fe5b60009182526020909120015560001901610fcc565b508284828154811061101d57fe5b600091825260209091200155505b50505056fea2646970667358221220bd4b0d8d945fb5fbc8f0ab3329f35da3cfc49e22e09f2e556075d3706bef62f364736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806365f7a5511161008c578063ac3204aa11610066578063ac3204aa146102b5578063bceb45db146102e9578063df4c1b4114610382578063ed421aa6146103a5576100cf565b806365f7a5511461025e57806375af1c361461029057806389da5e6914610298576100cf565b806303e0992f146100d45780630777aa321461010c57806314eaa86814610132578063257ce891146101b45780633d91efcf146102065780635fd45d241461022c575b600080fd5b6100fa600480360360208110156100ea57600080fd5b50356001600160a01b031661040f565b60408051918252519081900360200190f35b6100fa6004803603602081101561012257600080fd5b50356001600160a01b031661042a565b6101646004803603606081101561014857600080fd5b506001600160a01b038135169060208101359060400135610445565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101a0578181015183820152602001610188565b505050509050019250505060405180910390f35b6100fa600480360360e08110156101ca57600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359160808201359160a08101359091169060c00135610473565b6100fa6004803603602081101561021c57600080fd5b50356001600160a01b0316610490565b6101646004803603606081101561024257600080fd5b506001600160a01b0381351690602081013590604001356104ab565b6101646004803603606081101561027457600080fd5b506001600160a01b0381351690602081013590604001356104d1565b6100fa6104f7565b6100fa600480360360208110156102ae57600080fd5b50356104fd565b6102e7600480360360808110156102cb57600080fd5b5080359060ff6020820135169060408101359060600135610543565b005b610306600480360360208110156102ff57600080fd5b50356106b9565b604051808b6001600160a01b031681526020018a6001600160a01b03168152602001896001600160a01b03168152602001888152602001878152602001866001600160a01b031681526020018581526020018460ff1681526020018381526020018281526020019a505050505050505050505060405180910390f35b6101646004803603604081101561039857600080fd5b508035906020013561071f565b6102e760048036036101408110156103bc57600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359160808201359160a08101359091169060c08101359060ff60e08201351690610100810135906101200135610734565b6001600160a01b031660009081526002602052604090205490565b6001600160a01b031660009081526001602052604090205490565b6001600160a01b038316600090815260026020526040902060609061046b908484610bbe565b949350505050565b600061048488888888888888610c80565b98975050505050505050565b6001600160a01b031660009081526003602052604090205490565b6001600160a01b038316600090815260016020526040902060609061046b908484610bbe565b6001600160a01b038316600090815260036020526040902060609061046b908484610bbe565b60005490565b60408051466020808301919091523060601b82840152635619025560e11b6054830152605880830194909452825180830390940184526078909101909152815191012090565b600084815260046020526040902080546001600160a01b031661059f576040805162461bcd60e51b815260206004820152600f60248201526e6e6f2d6f726465722d65786973747360881b604482015290519081900360640190fd5b60006105aa866104fd565b82549091506105c5906001600160a01b031682878787610d16565b61060c576040805162461bcd60e51b81526020600482015260136024820152723737ba16b9b4b3b732b216b13c96b6b0b5b2b960691b604482015290519081900360640190fd5b610617600087610e79565b81546001600160a01b0316600090815260016020526040902061063a9087610e79565b60018201546001600160a01b031660009081526002602052604090206106609087610e79565b60028201546001600160a01b031660009081526003602052604090206106869087610e79565b60405186907f5152abf959f6564662358c2e52b702259b78bac5ee7842a0f01937e670efcc7d90600090a2505050505050565b600460208190526000918252604090912080546001820154600283015460038401549484015460058501546006860154600787015460088801546009909801546001600160a01b0397881699968816989588169794959390941693919260ff909116918a565b606061072d60008484610bbe565b9392505050565b6001600160a01b038a16610787576040805162461bcd60e51b8152602060048201526015602482015274696e76616c69642d6d616b65722d6164647265737360581b604482015290519081900360640190fd5b6001600160a01b0389166107e2576040805162461bcd60e51b815260206004820152601a60248201527f696e76616c69642d66726f6d2d746f6b656e2d61646472657373000000000000604482015290519081900360640190fd5b6001600160a01b03881661083d576040805162461bcd60e51b815260206004820152601860248201527f696e76616c69642d746f2d746f6b656e2d616464726573730000000000000000604482015290519081900360640190fd5b876001600160a01b0316896001600160a01b031614156108a4576040805162461bcd60e51b815260206004820152601960248201527f6475706c69636174652d746f6b656e2d61646472657373657300000000000000604482015290519081900360640190fd5b600087116108ed576040805162461bcd60e51b815260206004820152601160248201527034b73b30b634b216b0b6b7bab73a16b4b760791b604482015290519081900360640190fd5b6000861161093b576040805162461bcd60e51b815260206004820152601660248201527534b73b30b634b216b0b6b7bab73a16b7baba16b6b4b760511b604482015290519081900360640190fd5b6001600160a01b03851661098a576040805162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a590b5c9958da5c1a595b9d607a1b604482015290519081900360640190fd5b4284116109d1576040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642d646561646c696e6560801b604482015290519081900360640190fd5b60006109e28b8b8b8b8b8b8b610473565b90506109f18b82868686610d16565b610a38576040805162461bcd60e51b81526020600482015260136024820152723737ba16b9b4b3b732b216b13c96b6b0b5b2b960691b604482015290519081900360640190fd5b600081815260046020526040902080546001600160a01b031615610a92576040805162461bcd60e51b815260206004820152600c60248201526b6f726465722d65786973747360a01b604482015290519081900360640190fd5b80546001600160a01b03199081166001600160a01b038e811691909117835560018301805483168e831617905560028301805483168d8316179055600383018b9055600483018a90556005830180549092169089161790556006810186905560078101805460ff191660ff87161790556008810184905560098101839055610b1c60008388610f25565b6001600160a01b038c166000908152600160205260409020610b3f908388610f25565b6001600160a01b038b166000908152600260205260409020610b62908388610f25565b6001600160a01b038a166000908152600360205260409020610b85908388610f25565b60405182907f918554b6bd6e2895ce6553de5de0e1a69db5289aa0e4fe193a0dcd1f1434747790600090a2505050505050505050505050565b60608167ffffffffffffffff81118015610bd757600080fd5b50604051908082528060200260200182016040528015610c01578160200160208202803683370190505b50905060005b82811015610c78578454848402820110610c3c576000801b828281518110610c2b57fe5b602002602001018181525050610c70565b84818486020181548110610c4c57fe5b9060005260206000200154828281518110610c6357fe5b6020026020010181815250505b600101610c07565b509392505050565b604080517f02f6dc7ce3eb5b1bd3bb37a6ff443d8c9922f817e83adacce3f8c7cdda6fa1e46020808301919091526bffffffffffffffffffffffff1960609a8b1b811683850152988a1b8916605483015296891b88166068820152607c810195909552609c850193909352951b90931660bc82015260d0808201949094528251808203909401845260f001909152815191012090565b60008060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610d73573d6000803e3d6000fd5b505050602060405103516001600160a01b0316876001600160a01b03161490508015610da3576001915050610e70565b8560405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c0182815260200191505060405160208183030381529060405280519060200120955060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610e4e573d6000803e3d6000fd5b505050602060405103516001600160a01b0316876001600160a01b0316149150505b95945050505050565b81546000190160005b8354811015610eb55782848281548110610e9857fe5b90600052602060002001541415610ead578091505b600101610e82565b50805b835460001901811015610eff57838160010181548110610ed457fe5b9060005260206000200154848281548110610eeb57fe5b600091825260209091200155600101610eb8565b5082805480610f0a57fe5b60019003818190600052602060002001600090559055505050565b8254610f455782546001810184556000848152602090200182905561102b565b60001960005b8454811015610f98578260046000878481548110610f6557fe5b90600052602060002001548152602001908152602001600020600601541115610f9057809150610f98565b600101610f4b565b50600019811415610fbe575082546001810184556000848152602090200182905561102b565b835460018101855560008590525b8181111561100f57846001820381548110610fe357fe5b9060005260206000200154858281548110610ffa57fe5b60009182526020909120015560001901610fcc565b508284828154811061101d57fe5b600091825260209091200155505b50505056fea2646970667358221220bd4b0d8d945fb5fbc8f0ab3329f35da3cfc49e22e09f2e556075d3706bef62f364736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1540,
        "contract": "contracts/OrderBook.sol:OrderBook",
        "label": "_allHashes",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 1545,
        "contract": "contracts/OrderBook.sol:OrderBook",
        "label": "_hashesOfMaker",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 1550,
        "contract": "contracts/OrderBook.sol:OrderBook",
        "label": "_hashesOfFromToken",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 1555,
        "contract": "contracts/OrderBook.sol:OrderBook",
        "label": "_hashesOfToToken",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 1559,
        "contract": "contracts/OrderBook.sol:OrderBook",
        "label": "orderOfHash",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_bytes32,t_struct(Order)5131_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32[])",
        "numberOfBytes": "32",
        "value": "t_array(t_bytes32)dyn_storage"
      },
      "t_mapping(t_bytes32,t_struct(Order)5131_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct Orders.Order)",
        "numberOfBytes": "32",
        "value": "t_struct(Order)5131_storage"
      },
      "t_struct(Order)5131_storage": {
        "encoding": "inplace",
        "label": "struct Orders.Order",
        "members": [
          {
            "astId": 5112,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "maker",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5114,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "fromToken",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 5116,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "toToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 5118,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "amountIn",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 5120,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "amountOutMin",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 5122,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "recipient",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 5124,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "deadline",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 5126,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "v",
            "offset": 0,
            "slot": "7",
            "type": "t_uint8"
          },
          {
            "astId": 5128,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "r",
            "offset": 0,
            "slot": "8",
            "type": "t_bytes32"
          },
          {
            "astId": 5130,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "s",
            "offset": 0,
            "slot": "9",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "gasEstimates": {
    "creation": {
      "codeDepositCost": "839600",
      "executionCost": "877",
      "totalCost": "840477"
    },
    "external": {
      "allHashes(uint256,uint256)": "infinite",
      "cancelOrder(bytes32,uint8,bytes32,bytes32)": "infinite",
      "cancelOrderCallHash(bytes32)": "527",
      "createOrder(address,address,address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": "infinite",
      "createOrderCallHash(address,address,address,uint256,uint256,address,uint256)": "878",
      "hashesOfFromToken(address,uint256,uint256)": "infinite",
      "hashesOfMaker(address,uint256,uint256)": "infinite",
      "hashesOfToToken(address,uint256,uint256)": "infinite",
      "numberOfAllHashes()": "1043",
      "numberOfHashesOfFromToken(address)": "1143",
      "numberOfHashesOfMaker(address)": "1165",
      "numberOfHashesOfToToken(address)": "1231",
      "orderOfHash(bytes32)": "8804"
    },
    "internal": {
      "_addHash(bytes32[] storage pointer,bytes32,uint256)": "infinite",
      "_hashes(bytes32[] storage pointer,uint256,uint256)": "infinite",
      "_removeHash(bytes32[] storage pointer,bytes32)": "infinite"
    }
  }
}